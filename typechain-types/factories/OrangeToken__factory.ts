/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrangeToken, OrangeTokenInterface } from "../OrangeToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBefore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountAfter",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBefore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountAfter",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600c81526020017f4f72616e676520546f6b656e00000000000000000000000000000000000000008152506001908051906020019062000051929190620001f2565b506040518060400160405280600381526020017f4f52540000000000000000000000000000000000000000000000000000000000815250600290805190602001906200009f929190620001f2565b506012600360006101000a81548160ff021916908360ff160217905550600360009054906101000a900460ff16600a620000da91906200032b565b633b9aca00620000eb919062000468565b600455348015620000fb57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600454604051620001e49190620002b3565b60405180910390a362000581565b8280546200020090620004e0565b90600052602060002090601f01602090048101928262000224576000855562000270565b82601f106200023f57805160ff191683800117855562000270565b8280016001018555821562000270579182015b828111156200026f57825182559160200191906001019062000252565b5b5090506200027f919062000283565b5090565b5b808211156200029e57600081600090555060010162000284565b5090565b620002ad81620004c9565b82525050565b6000602082019050620002ca6000830184620002a2565b92915050565b6000808291508390505b60018511156200032257808604811115620002fa57620002f962000516565b5b60018516156200030a5780820291505b80810290506200031a8562000574565b9450620002da565b94509492505050565b60006200033882620004c9565b91506200034583620004d3565b9250620003747fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200037c565b905092915050565b6000826200038e576001905062000461565b816200039e576000905062000461565b8160018114620003b75760028114620003c257620003f8565b600191505062000461565b60ff841115620003d757620003d662000516565b5b8360020a915084821115620003f157620003f062000516565b5b5062000461565b5060208310610133831016604e8410600b8410161715620004325782820a9050838111156200042c576200042b62000516565b5b62000461565b620004418484846001620002d0565b925090508184048111156200045b576200045a62000516565b5b81810290505b9392505050565b60006200047582620004c9565b91506200048283620004c9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620004be57620004bd62000516565b5b828202905092915050565b6000819050919050565b600060ff82169050919050565b60006002820490506001821680620004f957607f821691505b6020821081141562000510576200050f62000545565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60008160011c9050919050565b6112bd80620005916000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461018f5780638da5cb5b146101bf57806395d89b41146101dd5780639dc29fac146101fb578063a9059cbb14610217578063dd62ed3e14610247576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806340c10f1914610173575b600080fd5b6100c1610277565b6040516100ce9190610ec5565b60405180910390f35b6100f160048036038101906100ec9190610d2f565b610309565b6040516100fe9190610eaa565b60405180910390f35b61010f6103fb565b60405161011c9190610f87565b60405180910390f35b61013f600480360381019061013a9190610ce0565b610405565b60405161014c9190610eaa565b60405180910390f35b61015d6105f1565b60405161016a9190610fa2565b60405180910390f35b61018d60048036038101906101889190610d2f565b610608565b005b6101a960048036038101906101a49190610c7b565b610751565b6040516101b69190610f87565b60405180910390f35b6101c761079a565b6040516101d49190610e8f565b60405180910390f35b6101e56107be565b6040516101f29190610ec5565b60405180910390f35b61021560048036038101906102109190610d2f565b610850565b005b610231600480360381019061022c9190610d2f565b610a1b565b60405161023e9190610eaa565b60405180910390f35b610261600480360381019061025c9190610ca4565b610ab4565b60405161026e9190610f87565b60405180910390f35b606060018054610286906110eb565b80601f01602080910402602001604051908101604052809291908181526020018280546102b2906110eb565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b5050505050905090565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103e99190610f87565b60405180910390a36001905092915050565b6000600454905090565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048090610f27565b60405180910390fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610f67565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d4919061102f565b925050819055506105e6848484610b3b565b600190509392505050565b6000600360009054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066f90610f47565b60405180910390fd5b806004600082825461068a9190610fd9565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106e09190610fd9565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107459190610f87565b60405180910390a35050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600280546107cd906110eb565b80601f01602080910402602001604051908101604052809291908181526020018280546107f9906110eb565b80156108465780601f1061081b57610100808354040283529160200191610846565b820191906000526020600020905b81548152906001019060200180831161082957829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790610f07565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093990610ee7565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610991919061102f565b9250508190555080600460008282546109aa919061102f565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0f9190610f87565b60405180910390a35050565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9690610f27565b60405180910390fd5b610aaa338484610b3b565b6001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b8a919061102f565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610be09190610fd9565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c449190610f87565b60405180910390a3505050565b600081359050610c6081611259565b92915050565b600081359050610c7581611270565b92915050565b600060208284031215610c8d57600080fd5b6000610c9b84828501610c51565b91505092915050565b60008060408385031215610cb757600080fd5b6000610cc585828601610c51565b9250506020610cd685828601610c51565b9150509250929050565b600080600060608486031215610cf557600080fd5b6000610d0386828701610c51565b9350506020610d1486828701610c51565b9250506040610d2586828701610c66565b9150509250925092565b60008060408385031215610d4257600080fd5b6000610d5085828601610c51565b9250506020610d6185828601610c66565b9150509250929050565b610d7481611063565b82525050565b610d8381611075565b82525050565b6000610d9482610fbd565b610d9e8185610fc8565b9350610dae8185602086016110b8565b610db78161117b565b840191505092915050565b6000610dcf601683610fc8565b9150610dda8261118c565b602082019050919050565b6000610df2601883610fc8565b9150610dfd826111b5565b602082019050919050565b6000610e15601483610fc8565b9150610e20826111de565b602082019050919050565b6000610e38601883610fc8565b9150610e4382611207565b602082019050919050565b6000610e5b601283610fc8565b9150610e6682611230565b602082019050919050565b610e7a816110a1565b82525050565b610e89816110ab565b82525050565b6000602082019050610ea46000830184610d6b565b92915050565b6000602082019050610ebf6000830184610d7a565b92915050565b60006020820190508181036000830152610edf8184610d89565b905092915050565b60006020820190508181036000830152610f0081610dc2565b9050919050565b60006020820190508181036000830152610f2081610de5565b9050919050565b60006020820190508181036000830152610f4081610e08565b9050919050565b60006020820190508181036000830152610f6081610e2b565b9050919050565b60006020820190508181036000830152610f8081610e4e565b9050919050565b6000602082019050610f9c6000830184610e71565b92915050565b6000602082019050610fb76000830184610e80565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610fe4826110a1565b9150610fef836110a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110245761102361111d565b5b828201905092915050565b600061103a826110a1565b9150611045836110a1565b9250828210156110585761105761111d565b5b828203905092915050565b600061106e82611081565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156110d65780820151818401526020810190506110bb565b838111156110e5576000848401525b50505050565b6000600282049050600182168061110357607f821691505b602082108114156111175761111661114c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f416d6f756e7420657863656564732062616c616e636500000000000000000000600082015250565b7f4275726e20746f20746865207a65726f20616464726573730000000000000000600082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b7f4e6f7420616c6c6f77656420616d6f756e740000000000000000000000000000600082015250565b61126281611063565b811461126d57600080fd5b50565b611279816110a1565b811461128457600080fd5b5056fea2646970667358221220f292a422a7935cd83392922e5c4bff680cb9df2111d92d913de97682d167f08b64736f6c63430008040033";

type OrangeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrangeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrangeToken__factory extends ContractFactory {
  constructor(...args: OrangeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OrangeToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrangeToken> {
    return super.deploy(overrides || {}) as Promise<OrangeToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrangeToken {
    return super.attach(address) as OrangeToken;
  }
  connect(signer: Signer): OrangeToken__factory {
    return super.connect(signer) as OrangeToken__factory;
  }
  static readonly contractName: "OrangeToken";
  public readonly contractName: "OrangeToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrangeTokenInterface {
    return new utils.Interface(_abi) as OrangeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrangeToken {
    return new Contract(address, _abi, signerOrProvider) as OrangeToken;
  }
}
