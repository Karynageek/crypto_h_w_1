/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrangeToken, OrangeTokenInterface } from "../OrangeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "nameToken",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbolToken",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimalsToken",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "totalSupplyToken",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c1338038062001c13833981810160405281019062000037919062000475565b83600190805190602001906200004f929190620001af565b50826002908051906020019062000068929190620001af565b5081600360006101000a81548160ff021916908360ff160217905550600360009054906101000a900460ff16600a620000a29190620006a8565b81620000af9190620006f9565b600481905550600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6004546040516200019d91906200076b565b60405180910390a350505050620007ec565b828054620001bd90620007b7565b90600052602060002090601f016020900481019282620001e157600085556200022d565b82601f10620001fc57805160ff19168380011785556200022d565b828001600101855582156200022d579182015b828111156200022c5782518255916020019190600101906200020f565b5b5090506200023c919062000240565b5090565b5b808211156200025b57600081600090555060010162000241565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002c8826200027d565b810181811067ffffffffffffffff82111715620002ea57620002e96200028e565b5b80604052505050565b6000620002ff6200025f565b90506200030d8282620002bd565b919050565b600067ffffffffffffffff82111562000330576200032f6200028e565b5b6200033b826200027d565b9050602081019050919050565b60005b83811015620003685780820151818401526020810190506200034b565b8381111562000378576000848401525b50505050565b6000620003956200038f8462000312565b620002f3565b905082815260208101848484011115620003b457620003b362000278565b5b620003c184828562000348565b509392505050565b600082601f830112620003e157620003e062000273565b5b8151620003f38482602086016200037e565b91505092915050565b600060ff82169050919050565b6200041481620003fc565b81146200042057600080fd5b50565b600081519050620004348162000409565b92915050565b6000819050919050565b6200044f816200043a565b81146200045b57600080fd5b50565b6000815190506200046f8162000444565b92915050565b6000806000806080858703121562000492576200049162000269565b5b600085015167ffffffffffffffff811115620004b357620004b26200026e565b5b620004c187828801620003c9565b945050602085015167ffffffffffffffff811115620004e557620004e46200026e565b5b620004f387828801620003c9565b9350506040620005068782880162000423565b925050606062000519878288016200045e565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620005b3578086048111156200058b576200058a62000525565b5b60018516156200059b5780820291505b8081029050620005ab8562000554565b94506200056b565b94509492505050565b600082620005ce5760019050620006a1565b81620005de5760009050620006a1565b8160018114620005f75760028114620006025762000638565b6001915050620006a1565b60ff84111562000617576200061662000525565b5b8360020a91508482111562000631576200063062000525565b5b50620006a1565b5060208310610133831016604e8410600b8410161715620006725782820a9050838111156200066c576200066b62000525565b5b620006a1565b62000681848484600162000561565b925090508184048111156200069b576200069a62000525565b5b81810290505b9392505050565b6000620006b5826200043a565b9150620006c283620003fc565b9250620006f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620005bc565b905092915050565b600062000706826200043a565b915062000713836200043a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200074f576200074e62000525565b5b828202905092915050565b62000765816200043a565b82525050565b60006020820190506200078260008301846200075a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620007d057607f821691505b602082108103620007e657620007e562000788565b5b50919050565b61141780620007fc6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461018f5780638da5cb5b146101bf57806395d89b41146101dd5780639dc29fac146101fb578063a9059cbb14610217578063dd62ed3e14610247576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806340c10f1914610173575b600080fd5b6100c1610277565b6040516100ce9190610dc4565b60405180910390f35b6100f160048036038101906100ec9190610e7f565b610309565b6040516100fe9190610eda565b60405180910390f35b61010f6103fb565b60405161011c9190610f04565b60405180910390f35b61013f600480360381019061013a9190610f1f565b610405565b60405161014c9190610eda565b60405180910390f35b61015d61065f565b60405161016a9190610f8e565b60405180910390f35b61018d60048036038101906101889190610e7f565b610676565b005b6101a960048036038101906101a49190610fa9565b6107be565b6040516101b69190610f04565b60405180910390f35b6101c7610807565b6040516101d49190610fe5565b60405180910390f35b6101e561082b565b6040516101f29190610dc4565b60405180910390f35b61021560048036038101906102109190610e7f565b6108bd565b005b610231600480360381019061022c9190610e7f565b610a87565b60405161023e9190610eda565b60405180910390f35b610261600480360381019061025c9190611000565b610b8e565b60405161026e9190610f04565b60405180910390f35b6060600180546102869061106f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b29061106f565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b5050505050905090565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103e99190610f04565b60405180910390a36001905092915050565b6000600454905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046c906110ec565b60405180910390fd5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90611158565b60405180910390fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad906111c4565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106429190611213565b92505081905550610654848484610c15565b600190509392505050565b6000600360009054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106dc90611293565b60405180910390fd5b80600460008282546106f791906112b3565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461074d91906112b3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107b29190610f04565b60405180910390a35050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606002805461083a9061106f565b80601f01602080910402602001604051908101604052809291908181526020018280546108669061106f565b80156108b35780601f10610888576101008083540402835291602001916108b3565b820191906000526020600020905b81548152906001019060200180831161089657829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390611355565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a5906113c1565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fd9190611213565b925050819055508060046000828254610a169190611213565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a7b9190610f04565b60405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee906110ec565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7090611158565b60405180910390fd5b610b84338484610c15565b6001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c649190611213565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cba91906112b3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d1e9190610f04565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d65578082015181840152602081019050610d4a565b83811115610d74576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d9682610d2b565b610da08185610d36565b9350610db0818560208601610d47565b610db981610d7a565b840191505092915050565b60006020820190508181036000830152610dde8184610d8b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1682610deb565b9050919050565b610e2681610e0b565b8114610e3157600080fd5b50565b600081359050610e4381610e1d565b92915050565b6000819050919050565b610e5c81610e49565b8114610e6757600080fd5b50565b600081359050610e7981610e53565b92915050565b60008060408385031215610e9657610e95610de6565b5b6000610ea485828601610e34565b9250506020610eb585828601610e6a565b9150509250929050565b60008115159050919050565b610ed481610ebf565b82525050565b6000602082019050610eef6000830184610ecb565b92915050565b610efe81610e49565b82525050565b6000602082019050610f196000830184610ef5565b92915050565b600080600060608486031215610f3857610f37610de6565b5b6000610f4686828701610e34565b9350506020610f5786828701610e34565b9250506040610f6886828701610e6a565b9150509250925092565b600060ff82169050919050565b610f8881610f72565b82525050565b6000602082019050610fa36000830184610f7f565b92915050565b600060208284031215610fbf57610fbe610de6565b5b6000610fcd84828501610e34565b91505092915050565b610fdf81610e0b565b82525050565b6000602082019050610ffa6000830184610fd6565b92915050565b6000806040838503121561101757611016610de6565b5b600061102585828601610e34565b925050602061103685828601610e34565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061108757607f821691505b60208210810361109a57611099611040565b5b50919050565b7f5472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b60006110d6601c83610d36565b91506110e1826110a0565b602082019050919050565b60006020820190508181036000830152611105816110c9565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000611142601483610d36565b915061114d8261110c565b602082019050919050565b6000602082019050818103600083015261117181611135565b9050919050565b7f4e6f7420616c6c6f77656420616d6f756e740000000000000000000000000000600082015250565b60006111ae601283610d36565b91506111b982611178565b602082019050919050565b600060208201905081810360008301526111dd816111a1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061121e82610e49565b915061122983610e49565b92508282101561123c5761123b6111e4565b5b828203905092915050565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b600061127d601883610d36565b915061128882611247565b602082019050919050565b600060208201905081810360008301526112ac81611270565b9050919050565b60006112be82610e49565b91506112c983610e49565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112fe576112fd6111e4565b5b828201905092915050565b7f4275726e20746f20746865207a65726f20616464726573730000000000000000600082015250565b600061133f601883610d36565b915061134a82611309565b602082019050919050565b6000602082019050818103600083015261136e81611332565b9050919050565b7f416d6f756e7420657863656564732062616c616e636500000000000000000000600082015250565b60006113ab601683610d36565b91506113b682611375565b602082019050919050565b600060208201905081810360008301526113da8161139e565b905091905056fea2646970667358221220e610537eeb9b311963b9c990549e6e9fa3f10ee475f3f323d48e612109c0db5164736f6c634300080d0033";

type OrangeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrangeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrangeToken__factory extends ContractFactory {
  constructor(...args: OrangeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OrangeToken";
  }

  deploy(
    nameToken: string,
    symbolToken: string,
    decimalsToken: BigNumberish,
    totalSupplyToken: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrangeToken> {
    return super.deploy(
      nameToken,
      symbolToken,
      decimalsToken,
      totalSupplyToken,
      overrides || {}
    ) as Promise<OrangeToken>;
  }
  getDeployTransaction(
    nameToken: string,
    symbolToken: string,
    decimalsToken: BigNumberish,
    totalSupplyToken: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      nameToken,
      symbolToken,
      decimalsToken,
      totalSupplyToken,
      overrides || {}
    );
  }
  attach(address: string): OrangeToken {
    return super.attach(address) as OrangeToken;
  }
  connect(signer: Signer): OrangeToken__factory {
    return super.connect(signer) as OrangeToken__factory;
  }
  static readonly contractName: "OrangeToken";
  public readonly contractName: "OrangeToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrangeTokenInterface {
    return new utils.Interface(_abi) as OrangeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrangeToken {
    return new Contract(address, _abi, signerOrProvider) as OrangeToken;
  }
}
